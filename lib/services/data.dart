import 'dart:convert';
import 'dart:io';

class Data {
  Data() {
    // readLanguagesFromFile();
  }

  String category = "all";
  String? language;
  String languageCode = "en";
  String? source;
  String? sourceCode;
  int sortValue = 0;

  late Stream<String> languagesStream;
  late Stream<String> sourcesStream;
  Map<String, String> languagesMap = {};
  Map<String, String> sourcesMap = {};

  String data = "";
  String s_data = "";

  List<String> sortbyList = ["Date", "Popularity", "Relevancy"];
  List<String> languagesList = [
    "Afar",
    "Abkhazian",
    "Avestan",
    "Afrikaans",
    "Akan",
    "Amharic",
    "Aragonese",
    "Arabic",
    "Assamese",
    "Avaric",
    "Aymara",
    "Azerbaijani",
    "Bashkir",
    "Belarusian",
    "Bulgarian",
    "Bihari languages",
    "Bislama",
    "Bambara",
    "Bengali",
    "Tibetan",
    "Breton",
    "Bosnian",
    "Catalan; Valencian",
    "Chechen",
    "Chamorro",
    "Corsican",
    "Cree",
    "Czech",
    "Church Slavic",
    "Chuvash",
    "Welsh",
    "Danish",
    "German",
    "Maldivian",
    "Dzongkha",
    "Ewe",
    "Greek",
    "English",
    "Esperanto",
    "Spanish; Castilian",
    "Estonian",
    "Basque",
    "Persian",
    "Fulah",
    "Finnish",
    "Fijian",
    "Faroese",
    "French",
    "Western Frisian",
    "Irish",
    "Gaelic; Scomttish Gaelic",
    "Galician",
    "Guarani",
    "Gujarati",
    "Manx",
    "Hausa",
    "Hebrew",
    "Hindi",
    "Hiri Motu",
    "Croatian",
    "Haitian; Haitian Creole",
    "Hungarian",
    "Armenian",
    "Herero",
    "Interlingua",
    "Indonesian",
    "Interlingue; Occidental",
    "Igbo",
    "Sichuan Yi; Nuosu",
    "Inupiaq",
    "Ido",
    "Icelandic",
    "Italian",
    "Inuktitut",
    "Japanese",
    "Javanese",
    "Georgian",
    "Kongo",
    "Kikuyu; Gikuyu",
    "Kuanyama; Kwanyama",
    "Kazakh",
    "Kalaallisut; Greenlandic",
    "Central Khmer",
    "Kannada",
    "Korean",
    "Kanuri",
    "Kashmiri",
    "Kurdish",
    "Komi",
    "Cornish",
    "Kirghiz; Kyrgyz",
    "Latin",
    "Luxembourgish; Letzeburgesch",
    "Ganda",
    "Limburgan; Limburger; Limburgish",
    "Lingala",
    "Lao",
    "Lithuanian",
    "Luba-Katanga",
    "Latvian",
    "Malagasy",
    "Marshallese",
    "Maori",
    "Macedonian",
    "Malayalam",
    "Mongolian",
    "Marathi",
    "Malay",
    "Maltese",
    "Burmese",
    "Nauru",
    "Bokmål, Norwegian",
    "Ndebele, North; North Ndebele",
    "Nepali",
    "Ndonga",
    "Dutch; Flemish",
    "Norwegian Nynorsk; Nynorsk, Norwegian",
    "Norwegian",
    "Ndebele, South; South Ndebele",
    "Navajo; Navaho",
    "Chichewa; Chewa; Nyanja",
    "Occitan (post 1500)",
    "Ojibwa",
    "Oromo",
    "Oriya",
    "Ossetian; Ossetic",
    "Panjabi; Punjabi",
    "Pali",
    "Polish",
    "Pushto; Pashto",
    "Portuguese",
    "Quechua",
    "Romansh",
    "Rundi",
    "Romanian; Moldavian; Moldovan",
    "Russian",
    "Kinyarwanda",
    "Sanskrit",
    "Sardinian",
    "Sindhi",
    "Northern Sami",
    "Sango",
    "Sinhala; Sinhalese",
    "Slovak",
    "Slovenian",
    "Samoan",
    "Shona",
    "Somali",
    "Albanian",
    "Serbian",
    "Swati",
    "Sotho, Southern",
    "Sundanese",
    "Swedish",
    "Swahili",
    "Tamil",
    "Telugu",
    "Tajik",
    "Thai",
    "Tigrinya",
    "Turkmen",
    "Tagalog",
    "Tswana",
    "Tonga (Tonga Islands)",
    "Turkish",
    "Tsonga",
    "Tatar",
    "Twi",
    "Tahitian",
    "Uighur; Uyghur",
    "Ukrainian",
    "Urdu",
    "Uzbek",
    "Venda",
    "Vietnamese",
    "Volapük",
    "Walloon",
    "Wolof",
    "Xhosa",
    "Yiddish",
    "Yoruba",
    "Zhuang; Chuang",
    "Chinese",
    "Zulu"
  ];
  List<String> categoriesList = [
    "all",
    "business",
    "technology",
    "sports",
    "entertainment",
    "health",
    "science",
  ];

  List<String> news_sourcesList = [
    "Any",
    "ABC News",
    "ABC News (AU)",
    "Aftenposten",
    "Al Jazeera English",
    "ANSA.it",
    "Argaam",
    "Ars Technica",
    "Ary News",
    "Associated Press",
    "Australian Financial Review",
    "Axios",
    "BBC News",
    "BBC Sport",
    "Bild",
    "Blasting News (BR)",
    "Bleacher Report",
    "Bloomberg",
    "Breitbart News",
    "Business Insider",
    "Business Insider (UK)",
    "Buzzfeed",
    "CBC News",
    "CBS News",
    "CNN",
    "CNN Spanish",
    "Crypto Coins News",
    "Der Tagesspiegel",
    "Die Zeit",
    "El Mundo",
    "Engadget",
    "Entertainment Weekly",
    "ESPN",
    "ESPN Cric Info",
    "Financial Post",
    "Focus",
    "Football Italia",
    "Fortune",
    "FourFourTwo",
    "Fox News",
    "Fox Sports",
    "Globo",
    "Google News",
    "Google News (Argentina)",
    "Google News (Australia)",
    "Google News (Brasil)",
    "Google News (Canada)",
    "Google News (France)",
    "Google News (India)",
    "Google News (Israel)",
    "Google News (Italy)",
    "Google News (Russia)",
    "Google News (Saudi Arabia)",
    "Google News (UK)",
    "Göteborgs-Posten",
    "Gruenderszene",
    "Hacker News",
    "Handelsblatt",
    "IGN",
    "Il Sole 24 Ore",
    "Independent",
    "Infobae",
    "InfoMoney",
    "La Gaceta",
    "La Nacion",
    "La Repubblica",
    "Le Monde",
    "Lenta",
    "L'equipe",
    "Les Echos",
    "Libération",
    "Marca",
    "Mashable",
    "Medical News Today",
    "MSNBC",
    "MTV News",
    "MTV News (UK)",
    "National Geographic",
    "National Review",
    "NBC News",
    "News24",
    "New Scientist",
    "News.com.au",
    "Newsweek",
    "New York Magazine",
    "Next Big Future",
    "NFL News",
    "NHL News",
    "NRK",
    "Politico",
    "Polygon",
    "RBC",
    "Recode",
    "Reddit /r/all",
    "Reuters",
    "RT",
    "RTE",
    "RTL Nieuws",
    "SABQ",
    "Spiegel Online",
    "Svenska Dagbladet",
    "T3n",
    "TalkSport",
    "TechCrunch",
    "TechCrunch (CN)",
    "TechRadar",
    "The American Conservative",
    "The Globe And Mail",
    "The Hill",
    "The Hindu",
    "The Huffington Post",
    "The Irish Times",
    "The Jerusalem Post",
    "The Lad Bible",
    "The Next Web",
    "The Sport Bible",
    "The Times of India",
    "The Verge",
    "The Wall Street Journal",
    "The Washington Post",
    "The Washington Times",
    "Time",
    "USA Today",
    "Vice News",
    "Wired",
    "Wired.de",
    "Wirtschafts Woche",
    "Xinhua Net",
    "Ynet"
  ];

  void readLanguagesFromFile() async {
    final file = File("lib/resources/languages.json");
    languagesStream = file.openRead().transform(utf8.decoder);
    await for (var line in languagesStream) {
      if (line != '[' || line != ']') {
        // store as a json string
        data += line;
      }
    }
    var languageList = json.decode(data); // returns a list of languages
    for (var lang in languageList) {
      // save to a map
      languagesMap[lang["name"]] = lang["code"];
      languagesList.add("\"${lang["name"]}\"");
    }
    // print(languages);
  }

  void readSourcesFromFile() async {
    final file = File("lib/resources/news_sources.json");
    sourcesStream = file.openRead().transform(utf8.decoder);
    await for (var line in sourcesStream) {
      s_data += line;
      // print(src);
    }
    try {
      Map sources = jsonDecode(s_data);
      // print(source);
    } catch (e) {}

    // List keys = [];
    // List s = [];
    // keys.addAll(src.keys);
    // print(src);
    // for (var i = 0; i < keys.length; i++) {
    //   // s.add("\"${src["$i"]["name"]}\"");
    //   sources[src["$i"]["name"]] = src["$i"]["id"];
    // }
    // print(s);
  }
}
